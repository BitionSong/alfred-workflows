<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>cn.alanhe.aboutmac</string>
	<key>category</key>
	<string>Self-Dev</string>
	<key>connections</key>
	<dict>
		<key>2353E6A3-0536-4ADA-8936-B2AEC1E72656</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>F6EDB591-1C8F-42F0-93A1-752E94140C67</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>D65A77A5-78F8-467D-AFF6-1656DD383D2E</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>92B41F6D-A3B7-486F-BE6E-9C774E943DD9</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>F6EDB591-1C8F-42F0-93A1-752E94140C67</key>
		<array/>
	</dict>
	<key>createdby</key>
	<string>Alan He</string>
	<key>description</key>
	<string>About This Mac</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>About Mac</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>autopaste</key>
				<false/>
				<key>clipboardtext</key>
				<string>{query}</string>
				<key>ignoredynamicplaceholders</key>
				<false/>
				<key>transient</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.clipboard</string>
			<key>uid</key>
			<string>F6EDB591-1C8F-42F0-93A1-752E94140C67</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<true/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<true/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>102</integer>
				<key>keyword</key>
				<string>about</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Please Waiting</string>
				<key>script</key>
				<string>tell application "Finder"
set username to long user name of (system info)set computername to host name of (system info)set ethernet to primary Ethernet address of (system info)set ipaddress to IPv4 address of (system info)set osver to system version of (system info)set cpuType to CPU type of (system info)set physicalMemory to physical memory of (system info)-- set bootVolume to boot volume of (system info)set totalSpace to capacity of (get startup disk)set freeSpace to free space of (get startup disk)

set osName to do shell script "bash ./os-name.sh"

set modelName to do shell script "bash ./mac-model-year.sh"set vmStats to (text 12 thru -2 of (do shell script "vm_stat | grep 'Pages free'")) * 4096set freeMemory to (round (vmStats / 1.0E+7) / 100)

set locale to user locale of (get system info)
set param to (username &amp; "‡" &amp; computername &amp; "‡" &amp; ethernet &amp; "‡" &amp; ipaddress &amp; "‡" &amp; osver &amp; "‡" &amp; cpuType &amp; "‡" &amp; (round (physicalMemory / 1024)) &amp; "‡" &amp; (round (totalSpace / 10E8)) &amp; "‡" &amp; (round (freeSpace / 10E8)))&amp; "‡" &amp; osName&amp; "‡" &amp; freeMemory&amp; "‡" &amp;modelName &amp; "‡" &amp;localeset comm to "bash ./main.sh" &amp; " \"" &amp; param &amp; "\""

do shell script comm
end tell</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string>./system-info.scpt</string>
				<key>subtext</key>
				<string>About This Mac</string>
				<key>title</key>
				<string>About Mac</string>
				<key>type</key>
				<integer>6</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>2353E6A3-0536-4ADA-8936-B2AEC1E72656</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>subtext</key>
				<string>Check for updates and install them if they exist</string>
				<key>text</key>
				<string>Update About Mac</string>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>D65A77A5-78F8-467D-AFF6-1656DD383D2E</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string># THESE VARIABLES MUST BE SET. SEE THE ONEUPDATER README FOR AN EXPLANATION OF EACH.
readonly remote_info_plist="https://raw.githubusercontent.com/alanhg/alfred-workflows/master/about-mac/src/info.plist"
readonly workflow_url="https://github.com/alanhg/alfred-workflows/raw/master/about-mac/About%20Mac.alfredworkflow"
readonly download_type='direct'
readonly frequency_check='0'

# FROM HERE ON, CODE SHOULD BE LEFT UNTOUCHED!
function abort {
  echo "${1}" &gt;&amp;2
  exit 1
}

function url_exists {
  curl --silent --location --output /dev/null --fail --range 0-0 "${1}"
}

function notification {
  local -r notificator="$(find . -type f -name 'notificator')"

  if [[ -f "${notificator}" &amp;&amp; "$(/usr/bin/file --brief --mime-type "${notificator}")" == 'text/x-shellscript' ]]; then
    "${notificator}" --message "${1}" --title "${alfred_workflow_name}" --subtitle "${2:-A new version is available}"
    return
  fi

  osascript -e "display notification \"${1}\" with title \"${alfred_workflow_name}\" subtitle \"${2:-A new version is available}\""
}

# Local sanity checks
readonly local_info_plist='info.plist'
readonly local_version="$(/usr/libexec/PlistBuddy -c 'print version' "${local_info_plist}")"

[[ -n "${local_version}" ]] || abort 'You need to set a workflow version in the configuration sheet.'
[[ "${download_type}" =~ ^(direct|page|github_release)$ ]] || abort "'download_type' (${download_type}) needs to be one of 'direct', 'page', or 'github_release'."
[[ "${frequency_check}" =~ ^[0-9]+$ ]] || abort "'frequency_check' (${frequency_check}) needs to be a number."

# Check for updates
if [[ $(find "${local_info_plist}" -mtime +"${frequency_check}"d) ]]; then
  # Remote sanity check
  if ! url_exists "${remote_info_plist}"; then
    abort "'remote_info_plist' (${remote_info_plist}) appears to not be reachable."
  fi

  readonly tmp_file="$(mktemp)"
  curl --silent --location --output "${tmp_file}" "${remote_info_plist}"
  readonly remote_version="$(/usr/libexec/PlistBuddy -c 'print version' "${tmp_file}")"
  rm "${tmp_file}"

  if [[ "${local_version}" == "${remote_version}" ]]; then
    touch "${local_info_plist}" # Reset timer by touching local file
    notification 'You are up to date…' ' '
    exit 0
  fi

  if [[ "${download_type}" == 'page' ]]; then
    notification 'Opening download page…'
    open "${workflow_url}"
    exit 0
  fi

  readonly download_url="$(
    if [[ "${download_type}" == 'github_release' ]]; then
      osascript -l JavaScript -e 'function run(argv) { return JSON.parse(argv[0])["assets"].find(asset =&gt; asset["browser_download_url"].endsWith(".alfredworkflow"))["browser_download_url"] }' "$(curl --silent "https://api.github.com/repos/${workflow_url}/releases/latest")"
    else
      echo "${workflow_url}"
    fi
  )"

  if url_exists "${download_url}"; then
    notification 'Downloading and installing…'
    readonly download_name="$(basename "${download_url}")"
    curl --silent --location --output "${HOME}/Downloads/${download_name}" "${download_url}"
    open "${HOME}/Downloads/${download_name}"
  else
    abort "'workflow_url' (${download_url}) appears to not be reachable."
  fi
fi</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>92B41F6D-A3B7-486F-BE6E-9C774E943DD9</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>&gt; Displays system information about your Mac.
Contains UserName、Model、HostName、Primary Ethernet Address、IPv4 Address、MacOS、CPU Type、Physical Memory、Locale、Display Resolution.

1. type `about` to trigger
2. ⏎ to copy info
3. large type support</string>
	<key>uidata</key>
	<dict>
		<key>2353E6A3-0536-4ADA-8936-B2AEC1E72656</key>
		<dict>
			<key>xpos</key>
			<real>100</real>
			<key>ypos</key>
			<real>120</real>
		</dict>
		<key>92B41F6D-A3B7-486F-BE6E-9C774E943DD9</key>
		<dict>
			<key>xpos</key>
			<real>350</real>
			<key>ypos</key>
			<real>345</real>
		</dict>
		<key>D65A77A5-78F8-467D-AFF6-1656DD383D2E</key>
		<dict>
			<key>xpos</key>
			<real>100</real>
			<key>ypos</key>
			<real>345</real>
		</dict>
		<key>F6EDB591-1C8F-42F0-93A1-752E94140C67</key>
		<dict>
			<key>xpos</key>
			<real>350</real>
			<key>ypos</key>
			<real>120</real>
		</dict>
	</dict>
	<key>userconfigurationconfig</key>
	<array/>
	<key>variablesdontexport</key>
	<array/>
	<key>version</key>
	<string>1.8</string>
	<key>webaddress</key>
	<string>https://github.com/alanhg/alfred-workflows/tree/master/about-mac</string>
</dict>
</plist>
